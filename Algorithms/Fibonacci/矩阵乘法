#include<stdio.h> 
#include<time.h> 

typedef struct Mtx{
	int m[2][2];
}MTX;

MTX base;
MTX temp;
MTX Multi(MTX , MTX );
int FastMod(int);

int main()
{
    int n;
	  clock_t start, stop;
	  double duration;
	  scanf("%d", &n);
    start = clock();
    printf("The result is %d\n", FastMod(n));
    stop = clock();
    duration = (double)(stop-start)/CLOCKS_PER_SEC;
    printf("用矩阵乘法所需要的时间是： %f seconds\n",duration);
    return 0;
 }
MTX Multi(MTX a, MTX b){
	MTX val;
	for(int i = 0; i<2; ++i){
		for(int j = 0; j<2; ++j){
			val.m[i][j] = 0;
			for(int k = 0; k < 2; ++k)
                val.m[i][j] = (val.m[i][j] + a.m[i][k] * b.m[k][j]) % 1000000;
		}
	}
	return val;
}
int FastMod(int num)  
{
    base.m[0][0] = base.m[0][1] = base.m[1][0] = 1;
    base.m[1][1] = 0;
    temp.m[0][0] = temp.m[1][1] = 1; 
    temp.m[0][1] = temp.m[1][0] = 0;
    while (num)
    {
        if (num & 1)  
        {
            temp = Multi(temp, base);
        }
        base = Multi(base, base);
        num >>= 1;
    }
    return temp.m[0][1];
}
