#include <iostream> 
using namespace std;

//各个活动的起始时间和结束时间、待存储被选择活动的数组A、活动个数
void Gready_activity_selector(int *s, int *f, int *A, int len){
	int i = 0, j = 1; 
	A[0] = 1;
	for(int m = 1; m<len; m++){
		if(s[m] >= f[i]){
			i = m;
			A[j] = m + 1;//下标与第几个活动相差 1 
			j++;
		}
	}
}

void recursive_activity_selector(int *s, int *f, int *A, int i, int n, int k){
	int j = k,m = i;
	while((m<n) && (s[m] < f[i]) && (m!= 0))
		m = m+1;
	if(m<n){
		A[j] = m+1;
		j++;
		recursive_activity_selector(s, f, A, m+1, n, j);
	}
}
int main(void) {
	int s[11] = {1, 3, 0, 5, 3, 5, 6, 8, 8, 2, 12};
	int f[11] = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
	int A[11] = {0};
	Gready_activity_selector(s, f, A, 11);
	cout<<"--------迭代--------"<<endl; 
	for(int i = 0; i<11&& A[i] != 0; ++i){
		cout<<A[i]<<' ';
	}
	cout<<endl;
	cout<<"--------递归--------"<<endl; 
	recursive_activity_selector(s, f, A, 0, 11, 0);
	for(int i = 0; i<11&& A[i] != 0; ++i){
		cout<<A[i]<<' ';
	}
 }
