//最长公共子串 
#include <iostream>
#include <cstring>
using namespace std;

char a[1001], b[1001];
int dp[1001][1001], len1, len2;
int large;
void long_common_sequence(int i, int j){
	for(i = 1; i<=len1; ++i){
		for(j = 1; j<= len2; ++j){
			if(a[i-1] == b[j-1])
				dp[i][j] = dp[i-1][j-1] + 1;
			else
				dp[i][j] = 0; 
		}
	}
	large = -1;
	for(i = 1; i<= len1; i++){
		for(j = 1; j<= len2; ++j)
		large = max(large, dp[i][j]);	
	}
	cout<<large<<endl; 
}
void print_lcs(){
	for(int i=1; i<=len1; ++i){
		for(int j = 1; j<= len2; ++j){
			if(dp[i][j] == large){
				if(i-large+1>=0){
					//注意这里k的取值范围 i-large <= k <= i-1
					for(int k = i-large; k<=i-1;k++)
						cout<<a[k];
					cout<<endl;
				}
			}
		}
	}
}
int main(void){
	while(cin>>a){
		cin>>b;
		memset(dp, 0, sizeof(dp));
		len1 = strlen(a);
		len2 = strlen(b);
		//输出最长公共子串的长度 
		long_common_sequence(len1, len2);
		print_lcs();
		for(int i= 0; i<=len1; ++i){
			for(int j = 0; j<= len2; ++j)
				cout<<dp[i][j]<<' ';
			cout<<endl;
		}
	}
	return 0;
}
