#include <stdio.h> 

void merge(int arr[], int l, int m, int r){
	//确定两个数组的大小 
	int len1 = m-l+1;
	int len2 = r-m;
	int left[len1];
	int right[len2];
	int i, j, k;
	//填满 left 数组 
	for(i = l; i<= m; ++i){
		left[i-l] = arr[i];
	}
	//填满 right 数组
	for(i = m+1; i<=r; ++i){
		right[i-m-1] = arr[i];
	}
	//进行合并
	//第一步 ： 先清零 
	i = 0;
	j = 0;
	k = l;
	//第二步：当 i 和 j 都没有达到 末端，比较大小然后填进去 
	while(i < len1 && j< len2){
		if(left[i]<right[j]){
			arr[k] = left[i];
			i++;
			k++;
		}
		else{
			arr[k] = right[j];
			j++;
			k++;
		}
	}
	// 第三步 ： 看最后剩下左右两边是哪个没填满，把剩下的直接合并到数组里面
	while(i<len1){
		arr[k] = left[i];
		i++;
		k++;
	}
	while(j < len2){
		arr[k] = right[j];
		j++;
		k++;	
	}
}
//分治过程 
void mergeSort(int arr[], int l, int r){
	if(l == r)
		return;
	else{
		int mid = (l+r)/2;
		mergeSort(arr, l, mid);//左边先归并排序
		mergeSort(arr, mid+1, r);//右边先归并排序 
		merge(arr, l, mid, r);//再把两部分合并起来
	}
}

int main(void) {
	int arr[8] ={1, 4,5, 17, 98, 19, 15, 11};
	int a = 0;
	int c = 7;
	int i;
	mergeSort(arr, a, c);
	for(i = 0; i<=c; ++i)
		printf("%d ",arr[i]);
	return 0;
}
