#include <iostream>
using namespace std;

void Buckt_sort(double a[], int len){
	double Min = a[0], Max = a[0];
	for(int i = 1; i<len; ++i){
		if(Min>a[i])
			Min = a[i];
		if(Max <a[i])
			Max = a[i];
	}
	int k = 10;//10为数字之间的间隔 
	int size = (Max - Min)/k+1;
	double **p = new double *[size];//分为size个桶
	for(int i = 0; i<size; ++i) {
		p[i] = new double[100];//每个指针都指向一块size个double的数组，每个桶都可以包含100个元素
	}
	int count[size]  = {0};//对桶进行计数 
	for(int i = 0; i<len; ++i){
		
		int flag = (int)((a[i]-Min)/k);
		p[flag][count[flag]] = a[i];//将每个元素放入相对应的桶里面，从 0 开始 
		int j = count[flag]++;//将相应的桶的计数加 1 
		
		//插入排序 
		for(; j>0 && a[i]<p[flag][j-1]; --j){
			p[flag][j] = p[flag][j-1];
		}
		p[flag][j] = a[i];
	}
	//元素全部放完之后，需要进行重新链接的过程
	int t = 0;
	for(int i = 0; i<size; ++i){
		for(int j = 0; j<count[i]; ++j){//桶的元素的个数 
			a[t++] = p[i][j];
		}
	} 
	//申请内存释放
	for(int i = 0; i<size; ++i) {
		delete p[i];
		p[i] = NULL;
	}
	delete []p;
	p = NULL;
}
int main(void){
	double A[10] = {18, 45, 7, 2, 256, 78, 9,23, 51,25};
	double B[9] = {0.78,0.17,0.39,0.26,0.72,0.94,0.21,0.12,0.23};
	Buckt_sort(A , 10);
	Buckt_sort(B, 9);
   	for(int i = 0; i<10; ++i){
   		cout<<A[i]<<' ';
	}
	cout<<endl;
	for(int i = 0; i<9; ++i)
		cout<<B[i]<<' ' ;
	return 0;
}
