#include <stdio.h> 

void merge(int arr[], int l, int m, int r){
	int len1 = m-l+1;
	int len2 = r-m;
	int left[len1];
	int right[len2];
	int i, j, k;
	for(i = l; i<= m; ++i){
		left[i-l] = arr[i];
	}
	for(i = m+1; i<=r; ++i){
		right[i-m-1] = arr[i];
	}
	i = 0;
	j = 0;
	k = l;
	while(i < len1 && j< len2){
		if(left[i]<right[j]){
			arr[k] = left[i];
			i++;
			k++;
		}
		else{
			arr[k] = right[j];
			j++;
			k++;
		}
	}
	while(i<len1){
		arr[k] = left[i];
		i++;
		k++;
	}
	while(j < len2){
		arr[k] = right[j];
		j++;
		k++;	
	}
}
void mergeSort(int arr[], int l, int r){
	if(l == r)
		return;
	else{
		int mid = (l+r)/2;
		mergeSort(arr, l, mid);
		mergeSort(arr, mid+1, r);
		merge(arr, l, mid, r);
	}
}

int main(void) {
	int arr[8] ={1, 4,5, 17, 98, 19, 15, 11};
	int a = 0;
	int c = 7;
	int i;
	mergeSort(arr, a, c);
	for(i = 0; i<=c; ++i)
		printf("%d ",arr[i]);
	return 0;
}
