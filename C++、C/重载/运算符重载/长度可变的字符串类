//编写一个长度可变的字符串类 
#include <iostream>
#include <cstring>
using namespace std;

class String{
	private:
		char* str;
	public:
		String():str(NULL){
		}//构造函数，初始化str为NULL
		const char* fun(){
			return str;
		}
		char* operator=(const char*);
		~String();
};
// 重载 '='使得 obj(对象）= "hello"能够成立 
char * String::operator=(const char*s){
	if(str)
		delete []str;
	if(s){//s不为NULL才会执行拷贝 
		str = new char[strlen(s)+1];
		strcpy(str,s);
	}
	else
		str = NULL;
	return str;
}
String::~String(){
	if(str)
		delete []str;
}

int main(void){
	String s;
	s = "Good Luck";
	cout<<s.fun()<<endl;
	//String s2 = "hello";//这条语句要是不注释掉就会出错,这本身不是一个赋值语句，
	//而是初始化语句，它需要去调用构造函数才能实现初始化的操作，而函数并没有 
	s = "Shenzhou 8";
	cout<<s.fun()<<endl;
	return 0;	
}
