#include <iostream>
#include <cstring>
#include <cstdlib>
using namespace std;

class Complex{
	double real, imag;
	public:
		Complex(double r = 0 , double i = 0):real(r), imag(i){
		}
		friend ostream& operator<<(ostream&os, const Complex &c);
		friend istream& operator>>(istream &is, Complex &c);
};
//不能定义为成员函数，只能定义为全局函数，右移运算符重载 
ostream & operator<<(ostream &os, const Complex&c){
	os<<c.real<<'+'<<c.imag<<'i';//以a+bi 的形式输出 
	return os;
}
istream &operator>>(istream &obj, Complex&c){
	string s;
	obj>>s;//将 a+bi 作为字符串读入， a+bi中间不能有空格
	int pos = s.find("+", 0);
	string temp = s.substr(0, pos);//分离出实部
	c.real = atof(temp.c_str());//atof库函数能将 const char* 指针指向的内容转成 float
	temp = s.substr(pos+1, s.length()-pos-2);
	c.imag = atof(temp.c_str());
	return obj;
}
int  main(){
	Complex c;
	int n;
	cin>>c>>n;
	cout<<c<<","<<n;
	return 0;
}
/*   输入：
          13.7+8i 8
     输出：13.7+8i 8
*/
